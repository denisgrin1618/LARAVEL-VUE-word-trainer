version: '3'
services:
    app:
        build:
            context: ./docker/app
            dockerfile: Dockerfile
        image: laravel/app
        restart: unless-stopped
        tty: true
        ports:
            - "6001:6001"
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www/html
        volumes:
            - ./:/var/www/html
            - ./tmp:/tmp
        networks:
            - wordback
    nginx:
        build:
            context: ./docker/nginx
            dockerfile: Dockerfile
        image: laravel/nginx
        # image: nginx:alpine
        restart: unless-stopped
        tty: true
        depends_on:
            - app
        ports:
            - "80:80"
            - "443:443"
        volumes:
            # - ./:/var/www/html
            # - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
            # - ./docker/nginx/ssl/:/etc/nginx/ssl/
            - "./public:/var/www/html/public:ro"
            - "./storage:/var/www/html/storage:ro"
        networks:
            - wordback
    mysql:
        image: 'mysql/mysql-server:8.0'
        restart: unless-stopped
        ports:
            - '${FORWARD_DB_PORT:-8001}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'wordback-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - wordback
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    redis:
        image: redis:5.0-alpine
        restart: unless-stopped
        tty: true
        ports:
            - "6379:6379"
        volumes:
            - 'wordback-redis:/data'
        networks:
            - wordback
        
    adminer:
        image: 'adminer:latest'
        restart: unless-stopped
        ports:
            - 8003:8080
        environment:
            MYSQL_USERNAME: "${DB_USERNAME}"
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            PMA_HOST: mysql
        depends_on:
            - mysql
        networks:
            - wordback

    npm:  
        image: node:18
        working_dir: /var/www/html
        entrypoint: ["npm"]
        volumes: 
            - ".:/var/www/html"
            
    # phpmyadmin:
    #     image: phpmyadmin/phpmyadmin
    #     links:
    #         - mysql:db
    #     ports:
    #         - 8002:80
    #     environment:
    #         MYSQL_USERNAME: "${DB_USERNAME}"
    #         MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    #         PMA_HOST: mysql
    #     depends_on:
    #       - mysql
    #     networks:
    #       - wordback
networks:
    wordback:
        driver: bridge
volumes:
    wordback-mysql:
        driver: local
    wordback-redis:
        driver: local
